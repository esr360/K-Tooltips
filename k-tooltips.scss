//=================================================================
// Tooltips
//=================================================================

// Settings
//-----------------------------------------------------------------

// Configurable/Default Options
$tooltip-options: (
	// Layout & Positioning
	position         : top,
	transition       : 0.4s,
	z-index          : 9999,
	distance         : -1em,
	// Size & Appearance
	max-width        : 500px,
	padding          : 1em,
	background-color : rgba(0, 0, 0, 0.75),
	border-radius    : 0.25em,
	arrow-size       : 0.5em,
	// Typography
	font-size        : 1em,
	color            : white,
	text-transform   : none,
	font-weight      : normal
);

// Custom Styles
$tooltip-styles: (
	light: (
		background-color : rgba(white, 0.8),
		color            : #444,
		transition       : 0
	),
);

$tooltip-positions: (
	top, bottom, left, right
);
		
// Utilities
//-----------------------------------------------------------------

@function tooltip($tooltip-option) {
    @return map-get($tooltip-options, $tooltip-option);
}

@function tooltip-style($tooltip-style) {
	@return map-get(map-get($tooltip-styles, light), $tooltip-style);
}

// CSS Triangle
//-----------------------------------------------------------------

@mixin triangle(
	$position: tooltip(position), 
	$color: tooltip(background-color),
	$size: tooltip(arrow-size)
) {
	&:after {
		content:'';
		position: absolute;
		width: 0;
		height: 0;
		margin-left: -$size;
		@if $position == top {
			top: 100%;
			left: 50%;
			border-left: solid $size transparent;
			border-right: solid $size transparent;
			border-top: solid $size $color;
		} @else if $position == bottom {
			bottom: 100%;
			left: 50%;
			border-left: solid $size transparent;
			border-right: solid $size transparent;
			border-bottom: solid $size $color;
		} @else if $position == left {
			top: 50%;
			right: -$size;
			transform: translateY(-50%);
			border-top: solid $size transparent;
			border-bottom: solid $size transparent;
			border-left: solid $size $color;
		} @else if $position == right {
			top: 50%;
			right: 100%;
			transform: translateY(-50%);
			border-top: solid $size transparent;
			border-bottom: solid $size transparent;
			border-right: solid $size $color;
		}
	}
}
		
// Tooltip
//-----------------------------------------------------------------

[data-tooltip] {	
	
	@at-root .tooltip-container & {		
		position: relative;
		cursor: pointer;
	}
	
	@at-root [class*="tooltip-wrapper"] {
		text-align: center;
	}
	
	@at-root .tooltip-content {
		
		// Layout & Positioning
		position: absolute;
		display: inline-block;
		white-space: pre-wrap;
		transition: tooltip(transition);
		z-index: tooltip(z-index);
		
		// Size & Appearance
		max-width: tooltip(max-width);
		padding: tooltip(padding);
		background-color: tooltip(background-color);
		border-radius: tooltip(border-radius);
		
		// Typography
		font-size: tooltip(font-size);
		color: tooltip(color);
		text-transform: tooltip(text-transform);
		font-weight: tooltip(font-weight);
		
		// Hide by default
		opacity: 0;
		visibility: hidden;
		
		// Show when parent component is hovered
        [data-tooltip]:hover & {
			opacity: 1;
			visibility: visible;
        }
		
		// Positions
		@each $tooltip-position in $tooltip-positions {
			[class*="tooltip-wrapper"][class*="-#{$tooltip-position}"] & {
				#{$tooltip-position}: tooltip(distance);
				@include triangle(#{$tooltip-position});
				@if $tooltip-position == top {
					transform: translateX(-50%) translateY(-100%);
				} @else if $tooltip-position == bottom {
					transform: translateX(-50%) translateY(100%);
				} @else if $tooltip-position == left {
					top: 50%;
					transform: translateX(-100%) translateY(-50%);
				} @else if $tooltip-position == right {
					top: 50%;
					transform: translateX(100%) translateY(-50%);
				}
			}	
		}
		
		// Custom Styles
		@each $tooltip-style in $tooltip-styles {
		 	$custom-style: nth($tooltip-style, 1);
			$custom-key: nth($tooltip-style, 1);
			$custom-value: nth($tooltip-style, 2);
			@debug $custom-key;
			[class*="tooltip-wrapper"][class*="-#{$custom-style}"] & {
				@each $position in $tooltip-positions {
					@at-root .tooltip-wrapper-#{$position}-#{$custom-style} .tooltip-content {
						&:after {
							border-#{$position}-color: tooltip-style(background-color) !important;
						}
					}			
				}
				$tooltip-options: map-remove($tooltip-options, "position", "distance", "arrow-size");
				@each $tooltip-option in $tooltip-options {
					@if map-has-key(map-get($tooltip-styles, $custom-style), $tooltip-key) {
						#{$tooltip-key}: #{$tooltip-value};
					}
				}
			}	
		}
		
	} // .tooltip-content
	
} // [data-tooltip]